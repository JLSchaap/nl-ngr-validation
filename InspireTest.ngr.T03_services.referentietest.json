[{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"url 'https:\/\/inspire.ec.europa.eu\/validator\/v2\/'","result":{"duration":116600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"11:50:30.687 karate.env system property was:","line":5}}]},{"line":128,"name":"Conformance Class: Download Service - Pre-defined Atom,  Atom Invasieve Exoten (INSPIRE Geharmoniseerd) https:\/\/geodata.nationaalgeoregister.nl\/rvo\/inspire\/invasieve-exoten\/atom\/v1_0\/index.xml EID11571c92-3940-4f42-a6cd-5e2b1c6f4d93","description":"","id":"conformance-class:-download-service---pre-defined-atom,--atom-invasieve-exoten-(inspire-geharmoniseerd)-https:\/\/geodata.nationaalgeoregister.nl\/rvo\/inspire\/invasieve-exoten\/atom\/v1-0\/index.xml-eid11571c92-3940-4f42-a6cd-5e2b1c6f4d93","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def testRunRequest =","result":{"duration":15803332,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"{\n  \"label\": \"Conformance Class: Download Service - Pre-defined Atom,  Atom Invasieve Exoten (INSPIRE Geharmoniseerd)\",\n  \"executableTestSuiteIds\": [\n    \"EID11571c92-3940-4f42-a6cd-5e2b1c6f4d93\"\n  ],\n  \"arguments\": {},\n  \"testObject\": {\n    \"resources\": {\n      \"serviceEndpoint\": \"https:\/\/geodata.nationaalgeoregister.nl\/rvo\/inspire\/invasieve-exoten\/atom\/v1_0\/index.xml\"\n    }\n  }\n}","line":10}},{"name":"path 'TestRuns'","result":{"duration":7960816,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":26},{"name":"request testRunRequest","result":{"duration":41700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":27},{"name":"method post","result":{"duration":31513566016,"error_message":"com.intuit.karate.exception.KarateException: referentietest.feature:28 - \njava.net.SocketTimeoutException: Read timed out","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":28,"doc_string":{"content_type":"","value":"11:51:02.480 java.net.SocketTimeoutException: Read timed out, http call failed after 31433 milliseconds for URL: https:\/\/inspire.ec.europa.eu\/validator\/v2\/TestRuns\n11:51:02.480 http request failed: \njava.net.SocketTimeoutException: Read timed out","line":28}},{"name":"assert responseStatus == 200 || responseStatus == 201","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":29},{"name":"print response.EtfItemCollection.testRuns.TestRun.id","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":30},{"name":"print response.EtfItemCollection.testRuns.TestRun.status","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":31},{"name":"print response.EtfItemCollection.testRuns.TestRun.label","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":32},{"name":"print response.EtfItemCollection.ref","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":33},{"name":"print response.EtfItemCollection.testRuns.TestRun.logPath","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":34},{"name":"def statuspath = \"TestRuns\/\" + response.EtfItemCollection.testRuns.TestRun.id","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":36},{"name":"def progresspath = \"TestRuns\/\" + response.EtfItemCollection.testRuns.TestRun.id + \"\/progress\"","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":37},{"name":"print 'statuspath', statuspath","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":38},{"name":"print 'progresspath ', progresspath","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":39},{"name":"path  progresspath","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":46},{"name":"method GET","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":47},{"name":"retry until response.val == response.max","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":48},{"name":"print response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":49},{"name":"path  progresspath","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":51},{"name":"method GET","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":52},{"name":"print response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":54},{"name":"path  statuspath","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":56},{"name":"method GET","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":57},{"name":"print response.EtfItemCollection.testRuns.TestRun.id","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":59},{"name":"print response.EtfItemCollection.testRuns.TestRun.status","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":60},{"name":"def status = response.EtfItemCollection.testRuns.TestRun.status","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":61},{"name":"print status","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":62},{"name":"print response.EtfItemCollection.testRuns.TestRun.label","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":63},{"name":"print response.EtfItemCollection.ref","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":64},{"name":"def ref = response.EtfItemCollection.ref","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":65},{"name":"print ref","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":66},{"name":"print response.EtfItemCollection.testRuns.TestRun.logPath","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":68},{"name":"def embedUrl =","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":71,"doc_string":{"content_type":"","value":"function(url, hyperlinkText)\n     { var html = '<a href=\\\"' + url + '\\\" >' + hyperlinkText + '<\/a>';\n     karate.embed(html,'text\/html'); }","line":71}},{"name":"def time = java.lang.System.currentTimeMillis()","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":77},{"name":"def jsonPath = time + 'Conformance Class: Download Service - Pre-defined Atom,  Atom Invasieve Exoten (INSPIRE Geharmoniseerd).json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":78},{"name":"def responsecontent = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":79},{"name":"karate.write(responsecontent, jsonPath)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":80},{"name":"def a = embedUrl (ref.substring(0, ref.length - 5) + '.html' ,  status )","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":81},{"name":"def a = embedUrl (\"..\/..\/\" + jsonPath ,  status )","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":82},{"name":"def json = get[0] response.EtfItemCollection.referencedItems.testTaskResults","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":86},{"name":"def jsonfailedStep = $json.TestTaskResult.testModuleResults.TestModuleResult[*].testCaseResults.TestCaseResult[*].testStepResults.TestStepResult[?(@.status=='FAILED')]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":87},{"name":"def jsonFailedStepmessages = $jsonfailedStep[*].messages.message.ref","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":88},{"name":"print jsonFailedStepmessages","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":89},{"name":"def jsonfailedAssert = $jsonfailedStep[*].testAssertionResults.TestAssertionResult[?(@.status=='FAILED')]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":90},{"name":"def jsonfailedMessages = $jsonfailedAssert[*].messages.message","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":91},{"name":"def tmpref = $jsonfailedMessages[*].ref","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":92},{"name":"def refs = karate.append( jsonFailedStepmessages, tmpref )","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":93},{"name":"def expectedresult = read('classpath:InspireTest\/ETFexpected\/atomerror.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":96},{"name":"def Collections = Java.type('java.util.Collections')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":97},{"name":"copy sortedrefs = refs","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":98},{"name":"Collections.sort(sortedrefs)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"copy sortedexpectedrefs = $expectedresult[*].ref","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"Collections.sort(sortedexpectedrefs)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"print refs","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":102},{"name":"print sortedrefs","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":103},{"name":"print sortedexpectedrefs","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":104},{"name":"match sortedrefs == sortedexpectedrefs","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":105},{"name":"print jsonfailedMessages","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def tempdir = java.lang.System.getProperty('user.dir')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":111},{"name":"def separator = java.lang.System.getProperty(\"file.separator\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":112},{"name":"def outputpath = tempdir + separator + 'output' + separator","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":113},{"name":"def mystorage = Java.type('storage.DataStorage')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":114},{"name":"def db = new mystorage","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def LocalDateTime = Java.type('java.time.LocalDateTime')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"eval db.writeln('- Test: '+ karate.info.scenarioName+ '\\n  Time: '+ LocalDateTime.now() +'\\n  Errors: ' +  sortedrefs  ,  outputpath + karate.info.featureFileName + '.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117}]}],"name":"InspireTest\/ngr\/T03_services\/referentietest.feature","description":"Service test Invasieve exoten","id":"service-test-invasieve-exoten","keyword":"Feature","uri":"InspireTest\/ngr\/T03_services\/referentietest.feature","tags":[{"name":"@step3","line":1}]}]