<testsuite failures="1" name="InspireTest/ngr/T03_services/referentietest.feature" skipped="0" tests="1" time="31.537488">
  <testcase classname="InspireTest.ngr.T03_services.referentietest" name="Conformance Class: Download Service - Pre-defined Atom,  Atom Invasieve Exoten (INSPIRE Geharmoniseerd) https://geodata.nationaalgeoregister.nl/rvo/inspire/invasieve-exoten/atom/v1_0/index.xml EID11571c92-3940-4f42-a6cd-5e2b1c6f4d93" time="31.537488">
    <failure message="referentietest.feature:28 - &#10;java.net.SocketTimeoutException: Read timed out">* url 'https://inspire.ec.europa.eu/validator/v2/' ........................ passed
* def testRunRequest = .................................................... passed
Given path 'TestRuns' ..................................................... passed
And request testRunRequest ................................................ passed
When method post .......................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: referentietest.feature:28 - 
java.net.SocketTimeoutException: Read timed out
	at âœ½.When method post (referentietest.feature:28)

Then assert responseStatus == 200 || responseStatus == 201 ................ skipped
* print response.EtfItemCollection.testRuns.TestRun.id .................... skipped
* print response.EtfItemCollection.testRuns.TestRun.status ................ skipped
* print response.EtfItemCollection.testRuns.TestRun.label ................. skipped
* print response.EtfItemCollection.ref .................................... skipped
* print response.EtfItemCollection.testRuns.TestRun.logPath ............... skipped
* def statuspath = "TestRuns/" + response.EtfItemCollection.testRuns.TestRun.id . skipped
* def progresspath = "TestRuns/" + response.EtfItemCollection.testRuns.TestRun.id + "/progress" . skipped
* print 'statuspath', statuspath .......................................... skipped
* print 'progresspath ', progresspath ..................................... skipped
Given path  progresspath .................................................. skipped
When method GET ........................................................... skipped
And retry until response.val == response.max .............................. skipped
* print response .......................................................... skipped
Given path  progresspath .................................................. skipped
When method GET ........................................................... skipped
* print response .......................................................... skipped
Given path  statuspath .................................................... skipped
When method GET ........................................................... skipped
* print response.EtfItemCollection.testRuns.TestRun.id .................... skipped
* print response.EtfItemCollection.testRuns.TestRun.status ................ skipped
* def status = response.EtfItemCollection.testRuns.TestRun.status ......... skipped
* print status ............................................................ skipped
* print response.EtfItemCollection.testRuns.TestRun.label ................. skipped
* print response.EtfItemCollection.ref .................................... skipped
* def ref = response.EtfItemCollection.ref ................................ skipped
* print ref ............................................................... skipped
* print response.EtfItemCollection.testRuns.TestRun.logPath ............... skipped
* def embedUrl = .......................................................... skipped
* def time = java.lang.System.currentTimeMillis() ......................... skipped
* def jsonPath = time + 'Conformance Class: Download Service - Pre-defined Atom,  Atom Invasieve Exoten (INSPIRE Geharmoniseerd).json' . skipped
* def responsecontent = response .......................................... skipped
* karate.write(responsecontent, jsonPath) ................................. skipped
* def a = embedUrl (ref.substring(0, ref.length - 5) + '.html' ,  status ) . skipped
* def a = embedUrl ("../../" + jsonPath ,  status ) ....................... skipped
* def json = get[0] response.EtfItemCollection.referencedItems.testTaskResults . skipped
* def jsonfailedStep = $json.TestTaskResult.testModuleResults.TestModuleResult[*].testCaseResults.TestCaseResult[*].testStepResults.TestStepResult[?(@.status=='FAILED')] . skipped
* def jsonFailedStepmessages = $jsonfailedStep[*].messages.message.ref .... skipped
* print jsonFailedStepmessages ............................................ skipped
* def jsonfailedAssert = $jsonfailedStep[*].testAssertionResults.TestAssertionResult[?(@.status=='FAILED')] . skipped
* def jsonfailedMessages = $jsonfailedAssert[*].messages.message .......... skipped
* def tmpref = $jsonfailedMessages[*].ref ................................. skipped
* def refs = karate.append( jsonFailedStepmessages, tmpref ) .............. skipped
* def expectedresult = read('classpath:InspireTest/ETFexpected/atomerror.json') . skipped
* def Collections = Java.type('java.util.Collections') .................... skipped
* copy sortedrefs = refs .................................................. skipped
* Collections.sort(sortedrefs) ............................................ skipped
* copy sortedexpectedrefs = $expectedresult[*].ref ........................ skipped
* Collections.sort(sortedexpectedrefs) .................................... skipped
* print refs .............................................................. skipped
* print sortedrefs ........................................................ skipped
* print sortedexpectedrefs ................................................ skipped
* match sortedrefs == sortedexpectedrefs .................................. skipped
* print jsonfailedMessages ................................................ skipped
* def tempdir = java.lang.System.getProperty('user.dir') .................. skipped
* def separator = java.lang.System.getProperty("file.separator") .......... skipped
* def outputpath = tempdir + separator + 'output' + separator ............. skipped
* def mystorage = Java.type('storage.DataStorage') ........................ skipped
* def db = new mystorage .................................................. skipped
* def LocalDateTime = Java.type('java.time.LocalDateTime') ................ skipped
* eval db.writeln('- Test: '+ karate.info.scenarioName+ '\n  Time: '+ LocalDateTime.now() +'\n  Errors: ' +  sortedrefs  ,  outputpath + karate.info.featureFileName + '.yaml') . skipped</failure>
  </testcase>
</testsuite>
